// After you change your Prisma schema, do not forget:
// Run `npx prisma migrate dev --name <description>` to update DB - like a git.
// Run `npx prisma generate` to regenerate Prisma for TypeScript
// Run `npx prisma studio` to open Prisma Studio
// Run `npx prisma db push` to push schema changes to the database without creating a migration -> Do not recommend...

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id        String   @id @default(uuid())
  title     String
  content   String?
  expiresAt DateTime?
  createdAt DateTime @default(now()) 

  timeOptions TimeOption[]
  participants Participant[]

  @@index([expiresAt])
}

model TimeOption {
  id        String   @id @default(uuid())
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
  startTime DateTime
  endTime   DateTime

  votes     Vote[]
}

model Participant {
  id        String   @id @default(uuid())
  name      String
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String

  votes     Vote[]
}

model Vote {
  id               String       @id @default(uuid())
  participant      Participant  @relation(fields: [participantId], references: [id])
  participantId    String
  timeOption       TimeOption   @relation(fields: [timeOptionId], references: [id])
  timeOptionId     String

  createdAt        DateTime     @default(now())

  @@unique([participantId, timeOptionId])
}